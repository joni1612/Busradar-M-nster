{"version":3,"sources":["assets/Haltestelle.svg","assets/bus.svg","icon.js","components/BusDriving.jsx","components/BusDialogV2.jsx","components/map.jsx","components/BusStops.jsx","components/DataHandling.js","App.js","reportWebVitals.js","index.js"],"names":["busStopIcon","L","Icon","iconUrl","stopicon","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","busIcon","busicon","BusDriving","this","loadComponent","props","itemsBus","map","item","filter","length","includes","properties","linienid","Marker","icon","position","geometry","coordinates","opacity","size","Popup","richtungstext","divIcon","className","html","toString","uuidv4","Component","columns","name","selector","sortable","BusDialogV2","state","items","DropdownButton","id","title","Form","AllLines","bus","Check","type","label","checked","onChange","e","handleFilter","data","filteredBusses","AllBusses","pagination","highlightOnHover","fahrzeugid","filterBusses","BusMap","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","busStops","isLoaded","DataHandling","haltestellen","forEach","nr","lbez","linesArray","lines","push","sort","a","b","busArray","filterItem","starthst","zielhst","akthst","Apps","interval","datahandling","currentCount","itmesStop","isLoadedBus","isLoadedStops","currensposition","positionLoaded","bind","getData","setState","newStateArray","slice","index","indexOf","splice","updateFilteredBusses","getBusInformation","getHaltestellen","setInterval","timer","fetch","then","res","json","getBusStops","features","itemsStop","navigator","geolocation","getCurrentPosition","success","coords","latitude","longitude","console","log","getBusLines","currentPosition","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.16785f00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Haltestelle.8574cb15.svg\";","export default __webpack_public_path__ + \"static/media/bus.04069814.svg\";","import L from \"leaflet\";\r\n// import busIconRot from \"./assets/bus_rot.svg\";\r\n// import busIconGelb from \"./assets/bus_gelb.svg\";\r\n// import busIconGrün from \"./assets/bus_grün.svg\";\r\nimport stopicon from \"./assets/Haltestelle.svg\";\r\nimport busicon from \"./assets/bus.svg\";\r\n\r\n// const busIconRed = new L.Icon({\r\n//   iconUrl: busIconRot,\r\n//   iconSize: [24, 24],\r\n//   iconAnchor: [12, 12],\r\n//   popupAnchor: [0, -6],\r\n//   className: \"leaflet-div-icon\",\r\n// });\r\n\r\n// const busIconYellow = new L.Icon({\r\n//   iconUrl: busIconGelb,\r\n//   iconSize: [24, 24],\r\n//   iconAnchor: [12, 12],\r\n//   popupAnchor: [0, -6],\r\n//   className: \"leaflet-div-icon\",\r\n// });\r\n\r\n// const busIconGreen = new L.Icon({\r\n//   iconUrl: busIconGrün,\r\n//   iconSize: [24, 24],\r\n//   iconAnchor: [12, 12],\r\n//   popupAnchor: [0, -6],\r\n//   className: \"leaflet-div-icon\",\r\n// });\r\n\r\nconst busStopIcon = new L.Icon({\r\n  iconUrl: stopicon,\r\n  iconRetinaUrl: stopicon,\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12],\r\n  popupAnchor: [0, -12],\r\n});\r\n\r\n\r\nconst busIcon = new L.Icon({\r\n  iconUrl: busicon,\r\n  iconRetinaUrl: busicon,\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12],\r\n  popupAnchor: [0, -12],\r\n});\r\n// export { busStopIcon, busIconRed, busIconYellow, busIconGreen };\r\n\r\nexport {busStopIcon, busIcon}","import React, { Component } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\n// import { busIconRed, busIconGreen, busIconYellow } from \"../icon\";\r\nimport { busIcon } from \"../icon\";\r\nimport L from \"leaflet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n// import ExtraMarkers from \"leaflet-extra-markers\";\r\n\r\nclass BusDriving extends Component {\r\n  render() {\r\n    return this.loadComponent();\r\n  }\r\n\r\n  loadComponent() {\r\n    return this.props.itemsBus.map(((item) => {\r\n      if (\r\n        this.props.filter.length > 0\r\n          ? this.props.filter.includes(item.properties.linienid)\r\n          : true\r\n      ) {\r\n        return (\r\n          <div key={uuidv4()}>\r\n            <Marker\r\n              icon={\r\n                // item.properties.delay > 20\r\n                //   ? busIconRed\r\n                //   : item.properties.delay >= 10\r\n                //   ? busIconYellow\r\n                //   : busIconGreen\r\n                busIcon\r\n              }\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n              opacity=\"1\"\r\n              size=\"30px\"\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n            <Marker\r\n              // icon={\r\n              //   new L.ExtraMarkers.icon({\r\n              //     shape: \"\",\r\n              //     innerHTML: item.properties.linienid.toString(),\r\n              //     color: \"red\",\r\n              //     iconColor: \"red\",\r\n              //     iconSize: [24, 24],\r\n              //     iconAnchor: [2, 0],\r\n              //   })\r\n              // }\r\n              icon = {L.divIcon({className: 'my-div-icon',\r\n              html:item.properties.linienid.toString(),\r\n              iconAnchor: [2, 0],\r\n             })}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n          </div>\r\n        );\r\n      }\r\n    }));\r\n  }\r\n}\r\nexport default BusDriving;\r\n","import React, { Component } from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst columns = [\r\n  {\r\n    name: 'Linienid',\r\n    selector: 'linienid',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Richtungstext',\r\n    selector: 'richtungstext',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Starthaltestelle',\r\n    selector: 'Starthaltestelle',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Zielhaltestelle',\r\n    selector: 'Zielhaltestelle',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Aktuelle Haltestelle',\r\n    selector: 'Aktuellhaltestelle',\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Verspätung',\r\n    selector: 'delay',\r\n    sortable: true,\r\n  },\r\n];\r\n\r\nclass BusDialogV2 extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: this.props.items,\r\n      filter: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"Filter\">\r\n          <DropdownButton id=\"dropdown-item-button\" title=\"Busfilter\">\r\n            <Form>\r\n              {this.props.AllLines.map((bus) => (\r\n                <div key={`${bus.id}`} className=\"mb-3\">\r\n                  <Form.Check\r\n                    type={\"checkbox\"}\r\n                    id={`${bus.id}`}\r\n                    label={`Linie ${bus?.linienid}`}\r\n                    checked={(!this.props.filter.includes(bus?.linienid)) ? false : true}\r\n                    onChange={(e) => {\r\n                        this.handleFilter(bus.linienid)\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Form>\r\n          </DropdownButton>\r\n          <DataTable\r\n            title=\"Busse\"\r\n            columns={columns}\r\n            data={this.props.filter?.length >= 0 ? this.props.filteredBusses : this.props.AllBusses}\r\n            pagination\r\n            highlightOnHover\r\n          />\r\n        </div>)\r\n\r\n  }\r\n\r\n  handleFilter(fahrzeugid) {\r\n    this.props.filterBusses(fahrzeugid);\r\n  }\r\n}\r\n\r\n\r\nexport default BusDialogV2;\r\n","import React, { Component } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport BusDriving from \"./BusDriving\";\r\nimport BusDialogV2 from \"./BusDialogV2\";\r\n\r\nimport BusStops from \"./BusStops\";\r\n\r\nclass BusMap extends Component {\r\n  render() {\r\n    const center = () => {\r\n      if (this.props.positionLoaded) {\r\n          return this.props.currentPosition;\r\n      } else {\r\n        return [51.961563, 7.628202];\r\n      }\r\n    };\r\n      return (\r\n        <div>\r\n          <MapContainer\r\n            // center={center()}\r\n            center={[51.961563, 7.628202]}\r\n            // zoom={this.props.zoom}\r\n            zoom={16}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <BusDriving\r\n              itemsBus={this.props.itemsBus}\r\n              filter={this.props.filter}\r\n            />\r\n            {/* <BusStops\r\n              itemsStop={this.props.itemsStop}\r\n              isLoadedStops={this.props.isLoadedStops}\r\n            /> */}\r\n          </MapContainer>\r\n          <BusDialogV2\r\n            busStops={this.props.busStops}\r\n            AllLines={this.props.AllLines}\r\n            filter={this.props.filter}\r\n            filterBusses={this.props.filterBusses}\r\n            AllBusses={this.props.AllBusses}\r\n            items={this.props.items}\r\n            isLoaded={this.props.isLoaded}\r\n            filteredBusses={this.props.filteredBusses}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default BusMap;\r\n","import React, { Component } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\n\r\nimport { busStopIcon } from \"../icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass BusStops extends Component {\r\n  render() {\r\n    if (!this.props.isLoadedStops) {\r\n      return \"ok\";\r\n    } else {\r\n      return this.props.itemsStop.map((item) => {\r\n        return (\r\n          <Marker\r\n            icon={busStopIcon}\r\n            key={uuidv4()}\r\n            position={[\r\n              item.geometry.coordinates[1],\r\n              item.geometry.coordinates[0],\r\n            ]}\r\n          >\r\n            <Popup>\r\n              Haltestelle: {item.properties.lbez} <br /> Richtung:{\" \"}\r\n              {item.properties.richtung}\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default BusStops;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class DataHandling {\r\n  constructor() {\r\n  }\r\n  \r\n\r\n  getBusStops (data) {\r\n    const haltestellen =  {};\r\n    data?.forEach((item) => {\r\n      haltestellen[item.properties.nr] = item.properties.lbez;\r\n    })\r\n    return haltestellen;\r\n  }\r\n  \r\n  getBusLines(data, filter) {\r\n    const linesArray = [];\r\n    const lines = [];\r\n    let bus;\r\n    data?.forEach((item) => {\r\n      if (!lines.includes(item.properties.linienid)){\r\n        if(!filter.includes(item.properties.linienid)){\r\n          bus = {\r\n            linienid: item.properties.linienid,\r\n            id: uuidv4(),\r\n          }  \r\n        } else {\r\n          bus = {\r\n            linienid: item.properties.linienid,\r\n            id: uuidv4(),\r\n            checked: true,\r\n          }  \r\n        }\r\n        linesArray.push(bus);\r\n        lines.push(item.properties.linienid);\r\n      }\r\n    });\r\n    linesArray.sort((a, b) => {\r\n      return a.linienid - b.linienid\r\n    });\r\n\r\n    return linesArray;\r\n  }\r\n\r\n  getBusInformation(data, filter, haltestellen) {\r\n    const busArray = [];\r\n    let bus;\r\n    if (filter.length > 0) {\r\n      data?.forEach((item) => {\r\n        filter.forEach(filterItem => {\r\n          if (filterItem === item.properties.linienid) {\r\n            bus = item.properties;\r\n            bus['longitude'] = item.geometry.coordinates[0];\r\n            bus['latitude'] = item.geometry.coordinates[1];\r\n            bus['id'] = uuidv4();\r\n            bus['Starthaltestelle'] = haltestellen[item.properties.starthst];\r\n            bus['Zielhaltestelle'] = haltestellen[item.properties.zielhst];\r\n            busArray.push(bus);\r\n          }\r\n        })\r\n      });\r\n      busArray.sort((a, b) => {\r\n        return a.linienid - b.linienid\r\n      });\r\n\r\n\r\n\r\n      return busArray;\r\n    }\r\n    data?.map((item) => {\r\n      bus = item.properties;\r\n      bus['longitude'] = item.geometry.coordinates[0];\r\n      bus['latitude'] = item.geometry.coordinates[1];\r\n      bus['id'] = uuidv4();\r\n      bus['Starthaltestelle'] = haltestellen[item.properties.starthst];\r\n      bus['Zielhaltestelle'] = haltestellen[item.properties.zielhst];\r\n      bus['Aktuellhaltestelle'] = haltestellen[item.properties.akthst];\r\n\r\n      busArray.push(bus);\r\n    });\r\n    busArray.sort((a, b) => {\r\n      return a.linienid - b.linienid\r\n    });\r\n\r\n    return busArray;\r\n  }\r\n\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport BusMap from \"./components/map\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DataHandling from './components/DataHandling';\r\n\r\n\r\nclass Apps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.interval = 0;\r\n    this.datahandling = new DataHandling;\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      currentCount: 0,\r\n      filteredBusses: [],\r\n      AllBusses: [],\r\n      filter: [],\r\n      AllLines: [],\r\n      itemsBus: [],\r\n      itmesStop: [],\r\n      isLoadedBus: false,\r\n      isLoadedStops: false,\r\n      zoom: 16,\r\n      currensposition: [],\r\n      positionLoaded: false,\r\n    };\r\n    this.filterBusses = this.filterBusses.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n\r\n  }\r\n\r\n  timer() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    })\r\n    if (this.state.currentCount >= 10) {\r\n      this.getData();\r\n      this.setState({\r\n        currentCount: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  filterBusses(id) {\r\n    const newStateArray = this.state.filter.slice();\r\n    const index = newStateArray.indexOf(id);\r\n\r\n    if (index > -1) {\r\n      newStateArray.splice(index, 1);\r\n    }\r\n    else {\r\n      newStateArray.push(id);\r\n    }\r\n\r\n    this.setState({\r\n      filter: newStateArray,\r\n    },\r\n      this.updateFilteredBusses);\r\n  }\r\n\r\n  updateFilteredBusses() {\r\n\r\n    this.setState({\r\n      filteredBusses: this.datahandling.getBusInformation(this.state.items, this.state.filter, this.state.busStops),\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHaltestellen();\r\n    setInterval(this.timer.bind(this), 1000);\r\n  }\r\n\r\n  getHaltestellen() {\r\n    fetch(\"https://rest.busradar.conterra.de/prod/haltestellen\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          busStops: this.datahandling.getBusStops(json.features),\r\n          itemsStop: json.features,\r\n        });\r\n      }).then(() => this.getData())\r\n      ;\r\n\r\n      if (\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition((success) =>\r\n          this.setState({\r\n            currensposition: [success.coords.latitude, success.coords.longitude],\r\n            positionLoaded: true,\r\n          })\r\n        );\r\n\r\n      } else {\r\n        console.log(\"Not Available\");\r\n      }\r\n  }\r\n\r\n\r\n  getData() {\r\n    fetch(\"https://rest.busradar.conterra.de/prod/fahrzeuge\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          items: json.features,\r\n          AllLines: this.datahandling.getBusLines(json.features, this.state.filter),\r\n          AllBusses: this.datahandling.getBusInformation(json.features, [],  this.state.busStops),\r\n          filteredBusses: this.datahandling.getBusInformation(json.features, this.state.filter, this.state.busStops),\r\n          isLoaded: true,\r\n          itemsBus: json.features,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n    return (\r\n      <div>\r\n        <BusMap\r\n          itemsStop={this.state.itemsStop}\r\n          itemsBus={this.state.itemsBus}\r\n          zoom={this.state.zoom}\r\n          currentPosition={this.state.currensposition}\r\n          positionLoaded={this.state.positionLoaded}\r\n          busStops={this.state.busStops}\r\n          AllLines={this.state.AllLines}\r\n          filter={this.state.filter}\r\n          filterBusses={this.filterBusses}\r\n          AllBusses={this.state.AllBusses}\r\n          items={this.state.items}\r\n          filteredBusses={this.state.filteredBusses} />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  else {\r\n    return <p>Is Loading...</p>\r\n  }\r\n  }\r\n}\r\n\r\nexport default Apps;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}